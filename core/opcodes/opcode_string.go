// Code generated by "stringer -type=Opcode"; DO NOT EDIT.

package opcodes

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Nop-0]
	_ = x[Pop-1]
	_ = x[Int-2]
	_ = x[Value-3]
	_ = x[True-4]
	_ = x[False-5]
	_ = x[Zero-6]
	_ = x[One-7]
	_ = x[MinusOne-8]
	_ = x[MaxInt-9]
	_ = x[EmptyStr-10]
	_ = x[Load-11]
	_ = x[Store-12]
	_ = x[LoadStore-13]
	_ = x[Dyload-14]
	_ = x[Global-15]
	_ = x[Get-16]
	_ = x[Put-17]
	_ = x[GetPut-18]
	_ = x[RangeTo-19]
	_ = x[RangeLen-20]
	_ = x[This-21]
	_ = x[Is-22]
	_ = x[Isnt-23]
	_ = x[Match-24]
	_ = x[MatchNot-25]
	_ = x[Lt-26]
	_ = x[Lte-27]
	_ = x[Gt-28]
	_ = x[Gte-29]
	_ = x[Add-30]
	_ = x[Sub-31]
	_ = x[Cat-32]
	_ = x[Mul-33]
	_ = x[Div-34]
	_ = x[Mod-35]
	_ = x[LeftShift-36]
	_ = x[RightShift-37]
	_ = x[BitOr-38]
	_ = x[BitAnd-39]
	_ = x[BitXor-40]
	_ = x[BitNot-41]
	_ = x[Not-42]
	_ = x[UnaryPlus-43]
	_ = x[UnaryMinus-44]
	_ = x[InRange-45]
	_ = x[Or-46]
	_ = x[And-47]
	_ = x[Bool-48]
	_ = x[QMark-49]
	_ = x[In-50]
	_ = x[Cover-51]
	_ = x[Jump-52]
	_ = x[JumpTrue-53]
	_ = x[JumpFalse-54]
	_ = x[JumpIs-55]
	_ = x[JumpIsnt-56]
	_ = x[JumpLt-57]
	_ = x[Iter-58]
	_ = x[ForIn-59]
	_ = x[Throw-60]
	_ = x[Try-61]
	_ = x[Catch-62]
	_ = x[CallFuncDiscard-63]
	_ = x[CallFuncNoNil-64]
	_ = x[CallFuncNilOk-65]
	_ = x[CallMethDiscard-66]
	_ = x[CallMethNoNil-67]
	_ = x[CallMethNilOk-68]
	_ = x[Super-69]
	_ = x[Return-70]
	_ = x[ReturnNil-71]
	_ = x[ReturnThrow-72]
	_ = x[Closure-73]
	_ = x[BlockBreak-74]
	_ = x[BlockContinue-75]
	_ = x[BlockReturn-76]
	_ = x[BlockReturnNil-77]
}

const _Opcode_name = "NopPopIntValueTrueFalseZeroOneMinusOneMaxIntEmptyStrLoadStoreLoadStoreDyloadGlobalGetPutGetPutRangeToRangeLenThisIsIsntMatchMatchNotLtLteGtGteAddSubCatMulDivModLeftShiftRightShiftBitOrBitAndBitXorBitNotNotUnaryPlusUnaryMinusInRangeOrAndBoolQMarkInCoverJumpJumpTrueJumpFalseJumpIsJumpIsntJumpLtIterForInThrowTryCatchCallFuncDiscardCallFuncNoNilCallFuncNilOkCallMethDiscardCallMethNoNilCallMethNilOkSuperReturnReturnNilReturnThrowClosureBlockBreakBlockContinueBlockReturnBlockReturnNil"

var _Opcode_index = [...]uint16{0, 3, 6, 9, 14, 18, 23, 27, 30, 38, 44, 52, 56, 61, 70, 76, 82, 85, 88, 94, 101, 109, 113, 115, 119, 124, 132, 134, 137, 139, 142, 145, 148, 151, 154, 157, 160, 169, 179, 184, 190, 196, 202, 205, 214, 224, 231, 233, 236, 240, 245, 247, 252, 256, 264, 273, 279, 287, 293, 297, 302, 307, 310, 315, 330, 343, 356, 371, 384, 397, 402, 408, 417, 428, 435, 445, 458, 469, 483}

func (i Opcode) String() string {
	if i >= Opcode(len(_Opcode_index)-1) {
		return "Opcode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Opcode_name[_Opcode_index[i]:_Opcode_index[i+1]]
}
